DROP TABLE IF EXISTS articles;
CREATE TABLE articles
(
  id              smallint unsigned NOT NULL auto_increment,
  publicationDate date NOT NULL,                              # When the article was published
  title           varchar(255) NOT NULL,                      # Full title of the article
  summary         text NOT NULL,                              # A short summary of the article
  content         mediumtext NOT NULL,                        # The HTML content of the article

  PRIMARY KEY     (id)
);
CREATE TABLE EVENTS
(
	 EVENT_ID            INT(20)    NOT NULL,
   EVENT_NAME          VARCHAR(100)   NOT NULL,
   DESCRIPTION         LONGTEXT,
   EVENT_IMAGE         LONGBLOB,
   ORGANISATION_NAME	 VARCHAR(50)   NOT NULL,
   EVENT_DATE					 DATE					 NOT NULL,
   EVENT_TIME 				 TIME 				 NOT NULL,
   PUBLISH_DATE 			 TIMESTAMP	     DEFAULT CURRENT_TIMESTAMP,
   EVENT_ADDRESS_ID    INT(20)   NOT NULL,
   PRIMARY KEY(EVENT_ID),
   FOREIGN KEY(EVENT_ADDRESS_ID) REFERENCES EVENT_ADDRESS(ADDRESS_ID)
);

CREATE TABLE EVENT_ADDRESS(
ADDRESS_ID INT(20) NOT NULL,
STREET_NAME VARCHAR(100) NOT NULL,
ADDRESS1 VARCHAR(250) NOT NULL,
ADDRESS2 VARCHAR(250),
CITY VARCHAR(50),
ZIPCODE INT(10) NOT NULL,
COUNTRY VARCHAR(50),
PRIMARY KEY(ADDRESS_ID)
);

CREATE TABLE USERS(
USER_ID INT(20) NOT NULL,
USER_NAME VARCHAR(50) NOT NULL,
EMAIL_ID VARCHAR(50) NOT NULL,
USER_IMAGE LONGBLOB,
USER_PHONE INT(20),
PRIMARY KEY(USER_ID)
);

CREATE TABLE EVENT_CONTACT(
CONTACT_ID INT(20) NOT NULL,
CONTACT_NAME VARCHAR(50) NOT NULL,
CONTACT_PHONE INT(20),
CONTACT_EMAIL VARCHAR(50),
CONTACT_EVENT_ID INT(20) NOT NULL,
PRIMARY KEY(CONTACT_ID),
FOREIGN KEY(CONTACT_EVENT_ID) REFERENCES EVENTS(EVENT_ID)
);

CREATE TABLE EVENT_USER(
EVENT_USER_ID INT(20) NOT NULL,
EVENTID INT(20) NOT NULL,
USERID INT(20) NOT NULL,
USER_FEEDBACK LONGTEXT,
USER_RATING INT(1),
USER_LIKE INT(1),
PRIMARY KEY(EVENT_USER_ID),
FOREIGN KEY(EVENTID) REFERENCES EVENTS(EVENT_ID),
FOREIGN KEY(USERID) REFERENCES USERS(USER_ID)
);
